# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-26 00:44
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllCitiesCoordsTable',
            fields=[
                ('index', models.BigIntegerField(primary_key=True, serialize=False)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('nation', models.TextField(blank=True, null=True)),
                ('coord0', models.FloatField(blank=True, null=True)),
                ('coord1', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'all_cities_coords_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CountyTable',
            fields=[
                ('index', models.BigIntegerField(primary_key=True, serialize=False)),
                ('city', models.TextField(blank=True, null=True)),
                ('state_abb', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('county', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'county_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DayTripTable',
            fields=[
                ('index', models.BigIntegerField(primary_key=True, serialize=False)),
                ('trip_locations_id', models.TextField(blank=True, null=True)),
                ('full_day', models.NullBooleanField()),
                ('default', models.NullBooleanField()),
                ('county', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('event_type', models.TextField(blank=True, null=True)),
                ('event_ids', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'day_trip_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FullTripTable',
            fields=[
                ('index', models.BigIntegerField(primary_key=True, serialize=False)),
                ('full_trip_id', models.TextField(blank=True, null=True)),
                ('trip_location_ids', models.TextField(blank=True, null=True)),
                ('default', models.NullBooleanField()),
                ('county', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('n_days', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'full_trip_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoogleTravelTimeTable',
            fields=[
                ('index', models.BigIntegerField(primary_key=True, serialize=False)),
                ('id_field', models.TextField(blank=True, db_column='id_', null=True)),
                ('orig_name', models.TextField(blank=True, null=True)),
                ('orig_idx', models.FloatField(blank=True, null=True)),
                ('dest_name', models.TextField(blank=True, null=True)),
                ('dest_idx', models.FloatField(blank=True, null=True)),
                ('orig_coord0', models.FloatField(blank=True, null=True)),
                ('orig_coord1', models.FloatField(blank=True, null=True)),
                ('dest_coord0', models.FloatField(blank=True, null=True)),
                ('dest_coord1', models.FloatField(blank=True, null=True)),
                ('orig_coords', models.TextField(blank=True, null=True)),
                ('dest_coords', models.TextField(blank=True, null=True)),
                ('google_driving_url', models.TextField(blank=True, null=True)),
                ('google_walking_url', models.TextField(blank=True, null=True)),
                ('driving_result', models.TextField(blank=True, null=True)),
                ('walking_result', models.TextField(blank=True, null=True)),
                ('google_driving_time', models.FloatField(blank=True, null=True)),
                ('google_walking_time', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'google_travel_time_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MongodbTripAdvisorTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('rating', models.TextField(blank=True, null=True)),
                ('reviews', models.TextField(blank=True, null=True)),
                ('city_rank', models.TextField(blank=True, null=True)),
                ('fee', models.TextField(blank=True, null=True)),
                ('visit_length', models.TextField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('street_address', models.TextField(blank=True, null=True)),
                ('address_locality', models.TextField(blank=True, null=True)),
                ('address_region', models.TextField(blank=True, null=True)),
                ('postal_code', models.TextField(blank=True, null=True)),
                ('full_address', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mongodb_trip_advisor_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PoiDetailTableV2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.BigIntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('street_address', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state_abb', models.TextField(blank=True, null=True)),
                ('state', models.TextField(blank=True, null=True)),
                ('postal_code', models.TextField(blank=True, null=True)),
                ('country', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('coord_lat', models.FloatField(blank=True, null=True)),
                ('coord_long', models.FloatField(blank=True, null=True)),
                ('num_reviews', models.BigIntegerField(blank=True, null=True)),
                ('review_score', models.FloatField(blank=True, null=True)),
                ('ranking', models.BigIntegerField(blank=True, null=True)),
                ('tag', models.TextField(blank=True, null=True)),
                ('raw_visit_length', models.TextField(blank=True, null=True)),
                ('fee', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('geo_content', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'poi_detail_table_V2',
                'managed': False,
            },
        ),
    ]
